public class Solution {
    // DO NOT MODIFY THE LIST. IT IS READ ONLY
    public ArrayList<Integer> slidingMaximum(final List<Integer> A, int B) {
        Deque<Integer> d = new LinkedList<Integer>();
        ArrayList<Integer> list = new ArrayList<Integer>();
        int i;
        for(i = 0; i < B; i++)
        {
            while(!d.isEmpty() && A.get(i) >= A.get(d.peekLast()))
            {
                d.removeLast();
            }
            d.addLast(i);
        }
        
        for( ; i < A.size(); i++)
        {
            list.add(A.get(d.peek()));
            while(!d.isEmpty() && d.peek() <= i - B)
            {
                d.remove();
            }
            
            while(!d.isEmpty() && A.get(i) >= A.get(d.peekLast()))
            {
                d.removeLast();
            }
            d.addLast(i);
        }
        list.add(A.get(d.peek()));
        return list;
    }
}
